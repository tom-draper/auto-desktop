<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Action.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Count.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAE0GAABNBgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAEAAAAAAAAAFwAAAGIAAACoAAAA2AAA
        APIAAAD9AAAA/QAAAPIAAADYAAAAqAAAAGIAAAAXAAAAAAAAAAEAAAADAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAMAAAAAAAAAKAAAAJsAAADuAAAA/wAA
        AP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAO4AAACcAAAAKAAAAAAAAAADAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAACQAAAI0AAAD7AAAA/wAA
        AP8AAAD9AAAA/AAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAPwAAAD9AAAA/wAAAP8AAAD7AAAAjAAA
        AAkAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAACUAAADSAAAA/wAA
        APwAAAD7AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA+wAA
        APwAAAD/AAAA0gAAACUAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAzAAAA6wAA
        AP8AAAD6AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD9AAAA+wAAAPsAAAD7AAAA+wAAAP0AAAD/AAAA/wAA
        AP8AAAD/AAAA/gAAAPoAAAD/AAAA6gAAADMAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAJwAA
        AOoAAAD/AAAA+wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP4AAAD7AAAA/wAAAP8AAAD/AAAA/wAAAPsAAAD/AAAA6QAAACcAAAAAAAAAAgAAAAAAAAABAAAAAAAA
        AAoAAADOAAAA/wAAAPsAAAD/AAAA/wAAAP8AAAD9AAAA/QAAAP8AAAD8AAAAzwAAAJwAAACCAAAAggAA
        AJwAAADPAAAA/AAAAP8AAAD9AAAA/QAAAP8AAAD/AAAA/wAAAPsAAAD/AAAAywAAAAcAAAAAAAAAAQAA
        AAMAAAAAAAAAjAAAAP8AAAD6AAAA/wAAAP8AAAD/AAAA/QAAAP4AAAD+AAAAowAAAC0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAtAAAAowAAAP4AAAD+AAAA/QAAAP8AAAD/AAAA/QAAAPcAAAD/AAAAjwAA
        AAAAAAADAAAAAAAAAC0AAAD6AAAA/wAAAP4AAAD/AAAA/wAAAP0AAAD/AAAA6wAAAEYAAAAAAAAAAQAA
        AAEAAAAEAAAABAAAAAQAAAAEAAAAAQAAAAEAAAAAAAAARwAAAOwAAAD/AAAA/AAAAPwAAAD9AAAA/wAA
        AMoAAABCAAAAAAAAAAEAAAAAAAAAmgAAAP8AAAD7AAAA/wAAAP8AAAD+AAAA/wAAAOoAAAAsAAAAAAAA
        AAUAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAUAAAAAAAAALgAAAOsAAAD/AAAA/wAA
        AOYAAABiAAAAAgAAAAAAAAAAAAAAAAAAABoAAADqAAAA/wAAAP4AAAD/AAAA/wAAAP4AAAD/AAAASQAA
        AAAAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAAAAAATAAA
        APsAAACJAAAADgAAAAAAAAADAAAAAwAAAAAAAAAAAAAAYgAAAP8AAAD9AAAA/wAAAP8AAAD8AAAA/wAA
        AJ8AAAAAAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAFAAAAGgAAAAAAAAABAAAAAwAAAAEAAAAAAAAAAAAAAAAAAACnAAAA/wAAAPwAAAD/AAAA/gAA
        AP8AAAD/AAAAMwAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAAAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANYAAAD/AAAA/gAA
        AP8AAAD9AAAA/wAAAM4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAA8QAA
        AP8AAAD+AAAA/wAAAPsAAAD/AAAAngAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAEAAAAAQAA
        AAAAAAD9AAAA/wAAAP8AAAD/AAAA+wAAAP8AAACDAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAQAAAABAAAAAAAA
        AAAAAAACAAAALwAAAP0AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAIMAAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABAAAAAEAAAAAAAAAAAAA
        AAIAAAAvAAAAfwAAANEAAAD9AAAA8QAAAP8AAAD+AAAA/wAAAPsAAAD/AAAAngAAAAAAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAEAAAAAQAAAAAAAAAAAAAAAQAA
        AC4AAAB/AAAA0AAAAP0AAAD/AAAA/wAAAP4AAADWAAAA/wAAAP4AAAD/AAAA/QAAAP8AAADOAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAALgAA
        AH8AAADQAAAA/QAAAP8AAAD/AAAA/gAAAPsAAAD9AAAA/wAAAKcAAAD/AAAA/AAAAP8AAAD+AAAA/wAA
        AP8AAAAzAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAArAAAAfwAA
        ANAAAAD9AAAA/wAAAP8AAAD+AAAA+wAAAP0AAAD/AAAA/wAAAP8AAAD/AAAAYgAAAP8AAAD9AAAA/wAA
        AP8AAAD8AAAA/wAAAJ8AAAAAAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAEAAAArgAA
        AP8AAAD9AAAA/wAAAP4AAAD7AAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAaAAAA6gAA
        AP8AAAD+AAAA/wAAAP8AAAD+AAAA/wAAAEkAAAAAAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAAZAAAAqwAAAP8AAAD+AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AAAAAACaAAAA/wAAAPsAAAD/AAAA/wAAAP4AAAD/AAAA6gAAACwAAAAAAAAABQAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAZQAAAO0AAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAAAAAAC0AAAD6AAAA/wAAAP4AAAD/AAAA/wAAAP0AAAD/AAAA6wAAAEYAAAAAAAAAAQAA
        AAEAAAAEAAAABAAAAAQAAAAEAAAAAgAAAAMAAAAAAAAAcgAAAP8AAAD9AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAADAAAAAAAAAIwAAAD/AAAA+gAAAP8AAAD/AAAA/wAAAP0AAAD+AAAA/gAA
        AKIAAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALgAAAKcAAAD+AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAAEAAAAAAAAACgAAAM4AAAD/AAAA+wAAAP8AAAD/AAAA/wAA
        AP0AAAD9AAAA/wAAAPwAAADPAAAAnAAAAIIAAACCAAAAnAAAANAAAAD8AAAA/wAAAP4AAAD/AAAA/wAA
        AP8AAAD/AAAA/gAAAPsAAAD+AAAA/wAAAP8AAAD/AAAAAAAAAAIAAAAAAAAAKAAAAOoAAAD/AAAA+wAA
        AP8AAAD/AAAA/wAAAP8AAAD7AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD7AAAA/wAA
        AP8AAAD/AAAA/wAAAP0AAAD+AAAA/wAAAP4AAAD8AAAA/wAAAP8AAAAAAAAAAAAAAAMAAAAAAAAANAAA
        AOsAAAD/AAAA+gAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAPsAAAD7AAAA+wAAAPsAAAD9AAAA/wAA
        AP8AAAD/AAAA/wAAAP4AAAD6AAAA/wAAAOAAAAB5AAAA7QAAAP8AAAD7AAAA/gAAAAAAAAAAAAAAAAAA
        AAMAAAAAAAAAJQAAANIAAAD/AAAA/AAAAPsAAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP4AAAD7AAAA/AAAAP8AAADRAAAAJgAAAAAAAAAkAAAAxAAAAP8AAAD8AAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAACQAAAI0AAAD8AAAA/wAAAP8AAAD9AAAA/AAAAP4AAAD/AAAA/wAA
        AP8AAAD/AAAA/gAAAPwAAAD9AAAA/wAAAP8AAAD7AAAAjQAAAAkAAAAAAAAABQAAAAAAAAABAAAAgwAA
        AP4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAADAAAAAAAAACgAAACcAAAA7gAAAP8AAAD+AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAADuAAAAnAAAACgAAAAAAAAAAwAAAAIAAAAAAAAAAgAA
        AAMAAAAAAAAAOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAAAQAAAAAAAAAXAAAAYgAA
        AKgAAADYAAAA8gAAAP0AAAD9AAAA8gAAANgAAACoAAAAYgAAABcAAAAAAAAAAQAAAAMAAAABAAAAAAAA
        AAAAAAAAAAAAAQAAAAMAAAAA9EACL+kAAJfUAAArqAAAFVAAAAqgAAAFQAAAAkAAAAKAEAgCgCAEBQBL
        0hIAr/RFAJ/6FwEf+iQBP/+hAT/9BAE/6CABP0MAAR/oAACeAAAAroAAAFpAAIAgkACAEAgAQAAAAEAA
        AACgAAAAUAAAAKgAABDUAAAg6QAAkvRAAig=
</value>
  </data>
</root>